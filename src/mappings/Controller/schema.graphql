type ControllerOrganization @entity {
	id: ID!
	avatarAddress: Bytes!
	nativeToken: TokenContract!
	nativeReputation: ReputationContract!
	controller: Bytes!
}

type ControllerScheme @entity {
	id: ID!
	dao: DAO!
	paramsHash: Bytes!
	canRegisterSchemes: Boolean
	canManageGlobalConstraints: Boolean
	canUpgradeController: Boolean
	canDelegateCall: Boolean
	gpQueue: GPQueue
	address: Bytes!
	name: String
	version: String
	alias: String
	continuousLocking4ReputationParams: ContinuousLocking4ReputationParams
	contributionRewardParams: ContributionRewardParam
	contributionRewardExtParams: ContributionRewardExtParam
	schemeRegistrarParams: SchemeRegistrarParam
	uGenericSchemeParams: UGenericSchemeParam
	genericSchemeParams: GenericSchemeParam
	genericSchemeMultiCallParams: GenericSchemeMultiCallParam
	numberOfQueuedProposals: BigInt!
	numberOfPreBoostedProposals: BigInt!
	numberOfBoostedProposals: BigInt!
	numberOfExpiredInQueueProposals: BigInt!
	isRegistered: Boolean!
	error: BigInt
}

type ControllerGlobalConstraint @entity {
	id: ID!
	address: Bytes!
	paramsHash: Bytes!
	type: String!
}

type ControllerRegisterScheme @entity {
	id: ID!
	txHash: Bytes!
	controller: Bytes!
	contract: Bytes!
	scheme: Bytes!
}

type ControllerUnregisterScheme @entity {
	id: ID!
	txHash: Bytes!
	controller: Bytes!
	contract: Bytes!
	scheme: Bytes!
}

type ControllerUpgradeController @entity {
	id: ID!
	txHash: Bytes!
	controller: Bytes!
	newController: Bytes!
}

type ControllerAddGlobalConstraint @entity {
	id: ID!
	txHash: Bytes!
	controller: Bytes!
	globalConstraint: Bytes!
	paramsHash: Bytes!
	type: String!
}

type ControllerRemoveGlobalConstraint @entity {
	id: ID!
	txHash: Bytes!
	controller: Bytes!
	globalConstraint: Bytes!
	isPre: Boolean
}

type ContinuousLocking4ReputationParams @entity {
	id: ID!
	startTime: BigInt!
	redeemEnableTime: BigInt!
	batchTime: BigInt!
	token: Bytes!
	tokenName: String
	tokenSymbol: String
	maxLockingBatches: BigInt
	repRewardConstA: BigInt
	repRewardConstB: BigInt
}

type ContributionRewardParam @entity {
	id: ID!
	votingMachine: Bytes!
	voteParams: GenesisProtocolParam!
}

type ContributionRewardExtParam @entity {
	id: ID!
	votingMachine: Bytes!
	voteParams: GenesisProtocolParam!
	rewarder: Bytes!
}

type SchemeRegistrarParam @entity {
	id: ID!
	votingMachine : Bytes!
	voteRegisterParams : GenesisProtocolParam!
	voteRemoveParams : GenesisProtocolParam!
}

type UGenericSchemeParam @entity {
	id: ID!
	votingMachine : Bytes!
	voteParams: GenesisProtocolParam!
	contractToCall: Bytes!
}

type GenericSchemeParam @entity {
	id: ID!
	votingMachine : Bytes!
	voteParams: GenesisProtocolParam!
	contractToCall: Bytes!
}

type GenericSchemeMultiCallParam @entity {
	id: ID!
	votingMachine : Bytes!
	voteParams: GenesisProtocolParam!
	schemeConstraints: Bytes!
	contractsWhiteList: [Bytes!]
}

type GenesisProtocolParam @entity {
	id: ID!
	# Genesis Protocol params
	queuedVoteRequiredPercentage: BigInt!
	queuedVotePeriodLimit: BigInt!
	boostedVotePeriodLimit: BigInt!
	preBoostedVotePeriodLimit: BigInt!
	thresholdConst: BigInt!
	limitExponentValue: BigInt!
	quietEndingPeriod: BigInt!
	proposingRepReward: BigInt!
	votersReputationLossRatio: BigInt!
	minimumDaoBounty: BigInt!
	daoBountyConst: BigInt!
	activationTime: BigInt!
	voteOnBehalf: Bytes!
}

type FirstRegisterScheme @entity {
	id: ID!
}
