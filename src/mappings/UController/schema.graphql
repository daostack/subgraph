type UControllerOrganization @entity {
	id: ID!
	avatarAddress: Bytes!
	nativeToken: TokenContract!
	nativeReputation: ReputationContract!
	controller: Bytes!
}

type UControllerGlobalConstraint @entity {
	id: ID!
	avatarAddress: Bytes!
	address: Bytes!
	paramsHash: Bytes!
	type: String!
}

type UControllerRegisterScheme @entity {
	id: ID!
	txHash: Bytes!
	controller: Bytes!
	contract: Bytes!
	avatarAddress: Bytes!
	scheme: Bytes!
}

type UControllerUnregisterScheme @entity {
	id: ID!
	txHash: Bytes!
	controller: Bytes!
	contract: Bytes!
	avatarAddress: Bytes!
	scheme: Bytes!
}

type UControllerUpgradeController @entity {
	id: ID!
	txHash: Bytes!
	controller: Bytes!
	avatarAddress: Bytes!
	newController: Bytes!
}

type UControllerAddGlobalConstraint @entity {
	id: ID!
	txHash: Bytes!
	controller: Bytes!
	avatarAddress: Bytes!
	globalConstraint: Bytes!
	paramsHash: Bytes!
	type: String!
}

type UControllerRemoveGlobalConstraint @entity {
	id: ID!
	txHash: Bytes!
	controller: Bytes!
	avatarAddress: Bytes!
	globalConstraint: Bytes!
	isPre: Boolean
}
